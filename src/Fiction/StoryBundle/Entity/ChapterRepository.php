<?php

namespace Fiction\StoryBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ChapterRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ChapterRepository extends EntityRepository
{
	public function getStoryChapter($story, $chapterNumber)
	{
		$em = $this->getEntityManager();
		
		$query = $em->createQuery(
		    'SELECT c
		    FROM FictionStoryBundle:Chapter c
		    WHERE c.story = :story AND c.chapter_number = :chapter'
		)
		->setParameter(':story', $story)
		->setParameter(':chapter', $chapterNumber);
		
		return $query->getOneOrNullResult();
	}
	
	public function getAllStoryChapters($story)
	{
		$em = $this->getEntityManager();
	
		$query = $em->createQuery(
			'SELECT c
		    FROM FictionStoryBundle:Chapter c
		    WHERE c.story = :story
			ORDER BY c.chapter_number ASC'
		)
		->setParameter(':story', $story);
	
		return $query->getResult();
	}
	
	/**
	 * Returns chapters affected by changing a chapter number.
	 * 
	 * i.e moving chapter number 3 to chapter number 8 returns
	 * chapters 3 to 8 to be updated accordingly 
	 *  
	 * @param Story $story
	 */
	public function getUpdatedStoryChapters($story, $startChapter, $endChapter)
	{
		$em = $this->getEntityManager();
		
		$query = $em->createQuery(
		    'SELECT c
		    FROM FictionStoryBundle:Chapter c
		    WHERE c.story = :story AND c.chapter_number >= :startChapter AND c.chapter_number <= :endChapter
			ORDER BY c.chapter_number ASC'
		)
		->setParameter(':story', $story)
		->setParameter(':startChapter', $startChapter)
		->setParameter(':endChapter', $endChapter);
		
		return $query->getResult();
	}
}